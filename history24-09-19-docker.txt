    1  #!/bin/bash
    2  trap '[ "$?" -eq 0 ] || read -p "Looks like something went wrong in step ´$STEP´... Press any key to continue..."' EXIT
    3  #Quick Hack: used to convert e.g. "C:\Program Files\Docker Toolbox" to "/c/Program Files/Docker Toolbox"
    4  win_to_unix_path(){  	wd="$(pwd)"; 	cd "$1"; 		the_path="$(pwd)"; 	cd "$wd"; 	echo $the_path; }
    5  # This is needed  to ensure that binaries provided
    6  # by Docker Toolbox over-ride binaries provided by
    7  # Docker for Windows when launching using the Quickstart.
    8  export PATH="$(win_to_unix_path "${DOCKER_TOOLBOX_INSTALL_PATH}"):$PATH"
    9  VM=${DOCKER_MACHINE_NAME-default}
   10  DOCKER_MACHINE="${DOCKER_TOOLBOX_INSTALL_PATH}\docker-machine.exe"
   11  STEP="Looking for vboxmanage.exe"
   12  if [ ! -z "$VBOX_MSI_INSTALL_PATH" ]; then   VBOXMANAGE="${VBOX_MSI_INSTALL_PATH}VBoxManage.exe"; else   VBOXMANAGE="${VBOX_INSTALL_PATH}VBoxManage.exe"; fi
   13  BLUE='\033[1;34m'
   14  GREEN='\033[0;32m'
   15  NC='\033[0m'
   16  #clear all_proxy if not socks address
   17  if  [[ $ALL_PROXY != socks* ]]; then   unset ALL_PROXY; fi
   18  if  [[ $all_proxy != socks* ]]; then   unset all_proxy; fi
   19  if [ ! -f "${DOCKER_MACHINE}" ]; then   echo "Docker Machine is not installed. Please re-run the Toolbox Installer and try again.";   exit 1; fi
   20  if [ ! -f "${VBOXMANAGE}" ]; then   echo "VirtualBox is not installed. Please re-run the Toolbox Installer and try again.";   exit 1; fi
   21  "${VBOXMANAGE}" list vms | grep \""${VM}"\" &> /dev/null
   22  VM_EXISTS_CODE=$?
   23  set -e
   24  STEP="Checking if machine $VM exists"
   25  if [ $VM_EXISTS_CODE -eq 1 ]; then   "${DOCKER_MACHINE}" rm -f "${VM}" &> /dev/null || :;   rm -rf ~/.docker/machine/machines/"${VM}"   if [ "${HTTP_PROXY}" ]; then     PROXY_ENV="$PROXY_ENV --engine-env HTTP_PROXY=$HTTP_PROXY";   fi;   if [ "${HTTPS_PROXY}" ]; then     PROXY_ENV="$PROXY_ENV --engine-env HTTPS_PROXY=$HTTPS_PROXY";   fi;   if [ "${NO_PROXY}" ]; then     PROXY_ENV="$PROXY_ENV --engine-env NO_PROXY=$NO_PROXY";   fi;   "${DOCKER_MACHINE}" create -d virtualbox $PROXY_ENV "${VM}"; fi
   26  STEP="Checking status on $VM"
   27  VM_STATUS="$( set +e ; "${DOCKER_MACHINE}" status "${VM}" )"
   28  if [ "${VM_STATUS}" != "Running" ]; then   "${DOCKER_MACHINE}" start "${VM}";   yes | "${DOCKER_MACHINE}" regenerate-certs "${VM}"; fi
   29  STEP="Setting env"
   30  eval "$("${DOCKER_MACHINE}" env --shell=bash --no-proxy "${VM}" | sed -e "s/export/SETX/g" | sed -e "s/=/ /g")" &> /dev/null #for persistent Environment Variables, available in next sessions
   31  eval "$("${DOCKER_MACHINE}" env --shell=bash --no-proxy "${VM}")" #for transient Environment Variables, available in current session
   32  STEP="Finalize"
   33  clear
   34  cat << EOF
   35                          ##         .
   36                    ## ## ##        ==
   37                 ## ## ## ## ##    ===
   38             /"""""""""""""""""\___/ ===
   39        ~~~ {~~ ~~~~ ~~~ ~~~~ ~~~ ~ /  ===- ~~~
   40             \______ o           __/
   41               \    \         __/
   42                \____\_______/
   43  EOF
   44  echo -e "${BLUE}docker${NC} is configured to use the ${GREEN}${VM}${NC} machine with IP ${GREEN}$("${DOCKER_MACHINE}" ip ${VM})${NC}"
   45  echo "For help getting started, check out the docs at https://docs.docker.com"
   46  echo
   47  echo 
   48  #cd #Bad: working dir should be whatever directory was invoked from rather than fixed to the Home folder
   49  docker () {   MSYS_NO_PATHCONV=1 docker.exe "$@"; }
   50  export -f docker
   51  if [ $# -eq 0 ]; then   echo "Start interactive shell";   exec "$BASH" --login -i; else   echo "Start shell with command";   exec "$BASH" -c "$*"; fi
   52  docker login
   53  docker login
   54  dashdio
   55  docker login
   56  docker-machine ls
   57  docker-machine start sgfirst
   58  docker login
   59  docker-machine env sgfirst
   60  eval $("C:\Program Files\Docker Toolbox\docker-machine.exe" env sgfirst)
   61  docker login
   62  winpty docker login
   63  clear
   64  clear
   65  docker-machine ls
   66  docker-machine env sgfirst
   67  eval $("C:\Program Files\Docker Toolbox\docker-machine.exe" env sgfirst)
   68  docker-machine activve
   69  docker-machine active
   70  docker network
   71  docker network create sogennet
   72  docker network ls
   73  docker network inspect sogennet
   74  docker network inspect bridge
   75  docker network ls
   76  docker network inspect host
   77  docker network inspect bridge
   78  docker ps
   79  docker ps -a
   80  docker container start socgen_ubuntu
   81  docker container start bind_test
   82  docker container start volume_test
   83  clear
   84  docker ps
   85  docker network inspect bridge
   86  docker network connect socgen_ubuntu
   87* docker network connect sogennet socgen_ubuntu[B
   88  docker network inspect sogennet
   89  docker container inspect socgen_ubuntu
   90  docker network inspect bridge
   91  docker network disconnect bridge socgen_ubuntu
   92  docker network inspect bridge
   93  docker container inspect socgen_ubuntu
   94  docker run --network sogennet --name netadd -dit ubuntu /bin/bash
   95  docker run --network sogennet --name netadd -dit ubuntu
   96  ocker ps
   97  docker ps
   98  docker ps -a 
   99  docker run --network sogennet --name netadd -dit ubuntu "/bin/bash"
  100  docker run --network sogennet --name netadd2 -dit ubuntu "/bin/bash"
  101* docker run --network sogennet --name netadd2 -dit ubuntu "/bin/bash"
  102  docker run --network sogennet --name netadd2 -dit ubuntu "bash"
  103* docker run --network sogennet --name netadd3 -dit ubuntu "bash"[B
  104  docker network inspect sogennet
  105  docker container insspect netadd3
  106  docker container inspect netadd3
  107  docker image ls
  108  docker image tag ubuntu dhana/ubuntu:v1.0
  109  docker image ls
  110  docker image tag hello-world hrb1989/hellosocgen:v1.0
  111  docker image ls
  112  docker push hrb1989/hellosocgen
  113  docker search hellosocgen
  114  docker search hellosocgen
  115  docker search hellosocgen
  116  docker search hellosocgen
  117  docker push dhana/ubuntu
  118  docker search hellosocgen
  119  docker search hrb1989/hellosocgen
  120  pwd
  121  history >> /d/history24-09-19-docker.txt
